<!DOCTYPE html>
<html lang="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Questione</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link rel="icon" href="/images/search.png" type="image/png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap"
      rel="stylesheet"
    />
  </head>

  <body>
    <%- include('partials/navbar.ejs') %>
    <div class="container">
      <div class="card mb-4 transparent">
        <div class="mt-3 d-flex">
          <div class="mt-3">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="64"
              height="64"
              fill="currentColor"
              class="bi bi-person-circle"
              viewBox="0 0 16 16"
            >
              <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
              <path
                fill-rule="evenodd"
                d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8m8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1"
              />
            </svg>
          </div>
          <div class="card-body">
            <h3><%= pergunta.titulo %></h3>
            <small class="text-light-opacity">
              <%= pergunta.descricao %>
            </small>
          </div>
        </div>
        <div class="card-footer d-flex align-items-center gap-4">
          <small class="text-light-opacity">
            Feita por <%= pergunta.autor.nome %> em <%= new
            Date(pergunta.data_criacao).toLocaleDateString('pt-BR', { year:
            'numeric' , month: 'long' , day: 'numeric' }) %>
          </small>
          <div class="buttons">
            <button
              class="border border-0 rounded-circle"
              onclick="apagarPergunta('<%= pergunta.id %>')"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                fill="currentColor"
                class="bi bi-trash-fill"
                viewBox="0 0 16 16"
              >
                <path
                  d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"
                />
              </svg>
            </button>
            <button
              class="border border-0 rounded-circle ms-2"
              onclick="editarPergunta('<%= pergunta.id %>')"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                fill="currentColor"
                class="bi bi-pencil"
                viewBox="0 0 16 16"
              >
                <path
                  d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"
                />
              </svg>
            </button>
          </div>
        </div>
      </div>

      <h4>Respostas:</h4>
      <ul class="list-group mb-4">
        <% if (pergunta.respostas && pergunta.respostas.length> 0) { %> <%
        pergunta.respostas.forEach(function(resposta) { %>
        <li class="list-group-item answer mt-3">
          <p>
            <strong> <%= resposta.autor.nome %>: </strong>
            <%= resposta.texto %>
          </p>
          <div class="buttons mb-2">
            <button
              class="like-button border border-0"
              onclick="likeResposta('<%= resposta.id %>')"
            >
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12 4 3 15h6v5h6v-5h6z"
                  class="icon_svg-stroke icon_svg-fill"
                  stroke-width="1.5"
                  stroke="#666"
                  fill="none"
                  stroke-linejoin="round"
                ></path>
              </svg>
              (<span id="likes-<%= resposta.id %>">
                <%= resposta.likes.length %> </span
              >)
            </button>
            <button
              class="border border-0 rounded-circle ms-2"
              onclick="apagarResposta('<%= resposta.id %>')"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                fill="currentColor"
                class="bi bi-trash-fill"
                viewBox="0 0 16 16"
              >
                <path
                  d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5M8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5m3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0"
                />
              </svg>
            </button>
            <button
              class="border border-0 rounded-circle ms-2"
              onclick="editarResposta('<%= resposta.id %>', '<%= resposta.texto %>')"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="20"
                height="20"
                fill="currentColor"
                class="bi bi-pencil"
                viewBox="0 0 16 16"
              >
                <path
                  d="M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325"
                />
              </svg>
            </button>
          </div>
          <small class="text-light-opacity">
            Respondida em: <%= new
            Date(resposta.data_criacao).toLocaleDateString() %>
          </small>
        </li>
        <% }); %> <% } else { %>
        <li class="list-group-item input-color">Nenhuma resposta ainda.</li>
        <% } %>
      </ul>

      <h4>Adicionar Resposta:</h4>
      <div class="form-group mb-3">
        <label>Resposta</label>
        <textarea
          id="titulo-form"
          name="texto"
          class="form-control input-color mt-2"
          rows="3"
          placeholder="Digite sua resposta aqui..."
          required
        ></textarea>
      </div>
      <button
        id="enviar-resposta"
        type="submit"
        class="btn btn-light fw-semibold"
      >
        Enviar Resposta
      </button>
    </div>

    <script>
      document
        .getElementById("enviar-resposta")
        .addEventListener("click", async () => {
          const texto = document.getElementById("titulo-form").value;
          if (!texto.trim()) {
            alert("Uma resposta em branco não é válida.");
            return;
          }
          fetch("/pergunta/" + "<%= pergunta.id %>" + "/resposta", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer " + localStorage.getItem("token"),
            },
            body: JSON.stringify({ texto }),
          })
            .then((response) => {
              if (response.ok) {
                location.reload();
              } else {
                alert("Erro!! Faça login");
                window.location = "/login";
              }
            })
            .catch((error) => {
              console.error("Erro:", error);
              alert(
                "Erro!! Só quem pode apagar a pergunta é quem fez a pergunta!!"
              );
            });
        });
      function likeResposta(respostaId) {
        fetch(`/resposta/${respostaId}/like`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: "Bearer " + localStorage.getItem("token"),
          },
        })
          .then((response) => {
            if (response.ok) {
              location.reload();
            } else {
              alert("Logue para curtir ou curta só uma vez");
            }
          })
          .catch((error) => {
            alert("Logue para curtir ou curta só uma vez");
          });
      }
      function apagarPergunta(perguntaId) {
        if (confirm("Tem certeza que deseja apagar esta pergunta?")) {
          fetch(`/pergunta/delete/${perguntaId}`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer " + localStorage.getItem("token"),
            },
          })
            .then((response) => {
              if (response.ok) {
                alert("Pergunta apagada com sucesso.");
                window.location.href = "/"; // Redireciona após apagar
              } else {
                alert(
                  "Erro!! Só quem pode apagar a pergunta é quem fez a pergunta!!"
                );
              }
            })
            .catch((error) => {
              console.error("Erro:", error);
              alert(
                "Erro!! Só quem pode apagar a pergunta é quem fez a pergunta!!"
              );
            });
        }
      }
      function apagarResposta(respostaId) {
        if (confirm("Tem certeza que deseja apagar esta resposta?")) {
          fetch(`/resposta/${respostaId}/delete`, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer " + localStorage.getItem("token"),
            },
          })
            .then((response) => {
              if (response.ok) {
                alert("Resposta apagada com sucesso.");
                location.reload(); // Recarrega a página após apagar
              } else {
                alert("Erro ao apagar a resposta.");
              }
            })
            .catch((error) => {
              console.error("Erro:", error);
              alert("Erro ao apagar a resposta.");
            });
        }
      }
      function editarResposta(respostaId, textoAtual) {
        const novoTexto = prompt("Edite a resposta:", textoAtual);

        if (novoTexto) {
          fetch(`/resposta/${respostaId}/update`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer " + localStorage.getItem("token"),
            },
            body: JSON.stringify({
              texto: novoTexto,
            }),
          })
            .then((response) => {
              if (response.ok) {
                alert("Resposta editada com sucesso.");
                location.reload(); // Recarrega a página após a edição
              } else {
                alert("Erro ao editar a resposta.");
              }
            })
            .catch((error) => {
              console.error("Erro:", error);
              alert("Erro ao editar a resposta.");
            });
        }
      }
      function editarPergunta(perguntaId) {
        const perguntaTitulo = prompt(
          "Edite o título da pergunta:",
          "<%= pergunta.titulo %>"
        );
        const perguntaDescricao = prompt(
          "Edite a descrição da pergunta:",
          `<%= pergunta.descricao %>`
        );

        if (perguntaTitulo && perguntaDescricao) {
          fetch(`/pergunta/${perguntaId}/update`, {
            method: "PUT",
            headers: {
              "Content-Type": "application/json",
              Authorization: "Bearer " + localStorage.getItem("token"),
            },
            body: JSON.stringify({
              titulo: perguntaTitulo,
              descricao: perguntaDescricao,
            }),
          })
            .then((response) => {
              if (response.ok) {
                alert("Pergunta editada com sucesso.");
                location.reload(); // Recarrega a página após a edição
              } else {
                alert(
                  "Erro!! Só quem pode editar a pergunta é quem fez a pergunta!!"
                );
              }
            })
            .catch((error) => {
              console.error("Erro:", error);
              alert(
                "Erro!! Só quem pode editar a pergunta é quem fez a pergunta!!"
              );
            });
        }
      }
    </script>

    <%- include('partials/footer.ejs') %>
  </body>
</html>
